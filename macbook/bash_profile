source ~/git/admin/bashrc
alias ls='/bin/ls -G'
alias esed='sed -E'
alias git.g='git log --graph --oneline --decorate'
alias git.p='git log -p --relative-date'
alias gitf='fork'
alias load.pca='load_into_db_schema_some_csvs.py rimsdw2 pca'
alias dump.pca='select_from_db_schema_table.py rimsdw2 pca'
alias psql.rimsdw='PGPASSFILE="${HOME}/.ssh/pgpass_rimsdw2" psql -h 127.0.0.1 -p 9999 -U zongzhi_liu dev'

# added by Miniconda3 installer
export PATH="$HOME/local/bin:$HOME/anaconda3/bin:$PATH"
export RSTUDIO_WHICH_R=$HOME/anaconda3/bin/R

# python settings: 
#pip install ipdb, pytest, pandas
#pip install future, future-breakpoint, future-fstrings
export PYTHONPATH="$HOME/git/s4-oracle-alpha-db/chaos/zach:$PYTHONPATH"
export PYTHONBREAKPOINT=IPython.core.debugger.set_trace #breakpoint()
    #from __future__ import (absolute_import, division, print_function)
    #from builtins import *
    #python -m ipdb test.py for postmortem debug

#tunnel to db2
alias start_mysql_port_forwarding='if ! screen -ls | grep -q "[0-9]\+.aws_db2_mysql\s"; then screen -S aws_db2_mysql -dm bash -c "AUTOSSH_DEBUG=1 autossh -M 0 -N -L5000:localhost:3306 mysql_tunnel@34.235.71.97 -g -i $HOME/.ssh/tunnel_user -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ServerAliveInterval=10 -o ServerAliveCountMax=1 -o ExitOnForwardFailure=yes -o ControlMaster=no -o ControlPath=/dev/null"; fi'

# tunnel to msdw
alias start_mdmsdw_port_forwarding='if ! screen -ls | grep -q "[0-9]\+.aws_mdmsdw_db\s"; then screen -S aws_mdmsdw_db -dm bash -c "AUTOSSH_DEBUG=1 autossh -M 0 -N -L6000:s4-radbinf-msdw-de-2017-sean.cbf5xbk4ekux.us-east-1.rds.amazonaws.com:3306 msdw_tunnel@52.22.79.171 -g -i $HOME/.ssh/msdw_tunnel -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ServerAliveInterval=10 -o ServerAliveCountMax=1 -o ExitOnForwardFailure=yes -o ControlMaster=no -o ControlPath=/dev/null"; fi'
alias mdmsdw='mycli --defaults-file=~/.my.msdw.cnf'

#tunnel to imsdw
alias start_mimsdw_port_forwarding='if ! screen -ls | grep -q "[0-9]\+.aws_ident_msdw_db\s"; then screen -S aws_ident_msdw_db -dm bash -c "AUTOSSH_DEBUG=1 autossh -M 0 -N -L7000:testjcappilot.cbf5xbk4ekux.us-east-1.rds.amazonaws.com:3306 zachary_liu@34.229.161.127 -g -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ServerAliveInterval=10 -o ServerAliveCountMax=1 -o ExitOnForwardFailure=yes -o ControlMaster=no -o ControlPath=/dev/null"; fi'
alias mimsdw='mycli --defaults-file=~/.my.imsdw.cnf'
#rimsdw2
export bastion=zach_liu@auto-abst-bastion-host-lb-542f9513ec56d4ad.elb.us-east-1.amazonaws.com
alias start_rimsdw2_port_forwarding='if ! screen -ls | grep -q "[0-9]\+.aws_rimsdw2_db\s"; then screen -S aws_rimsdw2_db -dm bash -c "AUTOSSH_DEBUG=1 autossh -M 0 -N -L9999:auto-abst-redshift-cluster.cpgxfro2regq.us-east-1.redshift.amazonaws.com:5439 zach_liu@auto-abst-bastion-host-lb-542f9513ec56d4ad.elb.us-east-1.amazonaws.com -g -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ServerAliveInterval=10 -o ServerAliveCountMax=1 -o ExitOnForwardFailure=yes -o ControlMaster=no -o ControlPath=/dev/null"; fi'
alias rimsdw2='start_rimsdw2_port_forwarding; PGPASSFILE="${HOME}/.ssh/pgpass_rimsdw2" pgcli -h 127.0.0.1 -p 9999 -U zongzhi_liu dev'

function start_all_port_forwarding {
    start_rimsdw2_port_forwarding
    start_mimsdw_port_forwarding
    start_mdmsdw_port_forwarding
    start_mysql_port_forwarding
}


#remap right alt to right ctrl: deprecated in favor of iterm2 conf
#ref: https://apple.stackexchange.com/questions/283252/how-do-i-remap-a-key-in-macos-sierra-e-g-right-alt-to-right-control
right_alt_2_ctrl () {
	hidutil property --set '{"UserKeyMapping":
	    [{"HIDKeyboardModifierMappingSrc":0x7000000e6,
	      "HIDKeyboardModifierMappingDst":0x7000000e4}]
	}' > NULL
}

right_alt_2_ctrl
alias vim='/usr/bin/vim'


#function timer_start {
#  timer=${timer:-$SECONDS}
#}
#
#function timer_stop {
#  timer_show=$(($SECONDS - $timer))
#  unset timer
#  # Write out the history
#  if [ "$(id -u)" -ne 0 ]; then echo "$(date -u +"%Y-%m-%dT%H:%M:%SZ") $(pwd) $(history 1 | sed 's/^[0-9]\+\s\+//')" >> ~/.logs/bash-history-$(date "+%Y-%m-%d").log; fi
#}
#
#if [ "$PROMPT_COMMAND" == "" ]; then
#  PROMPT_COMMAND="timer_stop"
#else
#  PROMPT_COMMAND="$PROMPT_COMMAND; timer_stop"
#fi
#export THIS_COMP="Laptop"
#export PS1="\n\[$(tput bold)\]\[$(tput setaf 7)\]\$([[ \$? != 0 ]] && tput setaf 1)#[\$(date +%k:%M:%S)|\${timer_show}s]\[$(tput setaf 2)\] \u\[$(tput setaf 5)\] @ $THIS_COMP :\[$(tput setaf 3)\]\w \[$(tput setaf 3)\]    \$(__git_ps1)\n\[$(tput setaf 3)\]"
#trap "timer_start; echo -ne $'\e[0m'" DEBUG
#
source /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh
#
#complete -W "$(cat ~/.ssh/config | grep '^Host ' | grep -v '*' | sed 's/Host //')" ssh

export PS1='\W/$(__git_ps1 "[%s]")\$ '

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/zongzhiliu/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/zongzhiliu/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/zongzhiliu/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/zongzhiliu/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
